services:
  mongo:
    image: mongo:6
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 }).ok"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s

  backend-api:
    build:
      context: .
      dockerfile: backend-api/Dockerfile
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - MONGO_URI=mongodb://mongo:27017/mp_writer
      - JWT_SECRET=${JWT_SECRET:?JWT_SECRET is required}
      - PORT=4000
      - APP_ORIGIN=http://localhost:3000
      - DATA_ENCRYPTION_KEY=${DATA_ENCRYPTION_KEY:-}
      # Address lookup provider (getaddress.io)
      - GETADDRESS_API_KEY=${GETADDRESS_API_KEY:-}
      - ADDRESS_DEBUG=${ADDRESS_DEBUG:-}
      - ALLOW_DEV_CREDIT_MUTATION=${ALLOW_DEV_CREDIT_MUTATION:-1}
      # Google OAuth (set these in your local override if needed)
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - GOOGLE_CALLBACK_URL=http://localhost:4000/api/auth/google/callback
      # OpenAI
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_MODEL=gpt-4o-mini
      - OPENAI_DEEP_RESEARCH_REASONING_SUMMARY=${OPENAI_DEEP_RESEARCH_REASONING_SUMMARY:-auto}
      - OPENAI_DEEP_RESEARCH_REASONING_EFFORT=${OPENAI_DEEP_RESEARCH_REASONING_EFFORT:-medium} # o4-mini-deep-research supports medium only
      # Stripe
      - STRIPE_CHECKOUT_ENABLED=${STRIPE_CHECKOUT_ENABLED:-0}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-}
      - STRIPE_PRICE_ID_CREDITS_3=${STRIPE_PRICE_ID_CREDITS_3:-}
      - STRIPE_PRICE_ID_CREDITS_5=${STRIPE_PRICE_ID_CREDITS_5:-}
      - STRIPE_PRICE_ID_CREDITS_10=${STRIPE_PRICE_ID_CREDITS_10:-}
      - STRIPE_AMOUNT_CREDITS_3=${STRIPE_AMOUNT_CREDITS_3:-299}
      - STRIPE_AMOUNT_CREDITS_5=${STRIPE_AMOUNT_CREDITS_5:-499}
      - STRIPE_AMOUNT_CREDITS_10=${STRIPE_AMOUNT_CREDITS_10:-999}
      - STRIPE_CURRENCY=${STRIPE_CURRENCY:-gbp}
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:4000/api/health',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))\""]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

  deep-research-mcp:
    build:
      context: .
      dockerfile: deep-research-mcp/Dockerfile
    environment:
      - PORT=${DEEP_RESEARCH_MCP_PORT:-4100}
      - DEEP_RESEARCH_DISABLE_PROXY=${DEEP_RESEARCH_DISABLE_PROXY:-0}
    ports:
      - "${DEEP_RESEARCH_MCP_PORT:-4100}:${DEEP_RESEARCH_MCP_PORT:-4100}"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:4100/api/health',r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1))\""]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    depends_on:
      backend-api:
        condition: service_healthy
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - NEXT_BACKEND_ORIGIN=http://backend-api:4000
      - NEXT_PUBLIC_ENABLE_DEMO_PURCHASE=${NEXT_PUBLIC_ENABLE_DEMO_PURCHASE:-1}
      - NEXT_PUBLIC_STRIPE_CHECKOUT_ENABLED=${NEXT_PUBLIC_STRIPE_CHECKOUT_ENABLED:-0}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY:-}
    ports:
      - "3000:3000"

volumes:
  mongo_data:
